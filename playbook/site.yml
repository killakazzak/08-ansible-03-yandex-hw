---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Start clickhouse service
    - name: Flush handlers
      meta: flush_handlers
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0

- name: Install and configure LightHouse
  hosts: lighthouse
  tasks:
    - name: Download LightHouse static files
      ansible.builtin.get_url:
        url: "https://example.com/path/to/lighthouse-static.zip"
        dest: "/tmp/lighthouse-static.zip"

    - name: Unzip LightHouse static files
      ansible.builtin.unarchive:
        src: "/tmp/lighthouse-static.zip"
        dest: "/var/www/lighthouse"
        remote_src: yes

    - name: Install Nginx
      ansible.builtin.yum:
        name: nginx
        state: present

    - name: Configure Nginx for LightHouse
      ansible.builtin.template:
        src: "nginx-lighthouse.conf.j2"
        dest: "/etc/nginx/conf.d/lighthouse.conf"
      notify: Restart nginx

    - name: Start Nginx service
      ansible.builtin.service:
        name: nginx
        state: started
        enabled: true

  handlers:
    - name: Restart nginx
      ansible.builtin.service:
        name: nginx
        state: restarted
